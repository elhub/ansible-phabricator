---
# tasks file for phabricator
- name: set variables (general defaults for all OS, based on Ubuntu 14. Can be overridden below.)
  set_fact:
    users:
      web: www-data
      vcs: vcs-user
      daemon: phab-daemon
    php_sock: "unix:/var/run/php5-fpm.sock"
    php_path: /etc/php5/fpm/conf.d
    php_service: php5-fpm
    mysql_service: mysql
    mysql_path: /etc/mysql/conf.d
    exim_service_name: exim4
    exim_config_file: /etc/exim4/update-exim4.conf.conf
    git_core_path: /usr/lib/git-core

- name: set variables (Ubuntu 16)
  set_fact:
    php_sock: "unix:/var/run/php/php7.1-fpm.sock"
    php_path: /etc/php/7.1/fpm/conf.d
    php_service: php7.1-fpm
    mysql_path: /etc/mysql/mysql.conf.d
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version > "15") or
        (ansible_distribution == "Debian" and ansible_distribution_major_version > "7")
  
- name: set variables (Redhat 6)
  set_fact:
    users:
      web: apache
      vcs: vcs-user
      daemon: phab-daemon
    php_sock: "unix:/var/run/php-main.socket"
    php_path: /etc/php.d/
    php_service: php-fpm
    mysql_service: mysqld
    mysql_path: /etc/my.cnf.d
    exim_config_file: /etc/exim/update-exim.conf.conf
    exim_service_name: exim
    git_core_path: /usr/libexec/git-core
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version < "7"
  
- name: set variables (Redhat 7)
  set_fact:
    users:
      web: apache
      vcs: vcs-user
      daemon: phab-daemon
    php_sock: "unix:/var/run/php-main.socket"
    php_path: /etc/php.d/
    php_service: php-fpm
    mysql_service: mariadb
    mysql_path: /etc/my.cnf.d
    exim_config_file: /etc/exim/update-exim.conf.conf
    exim_service_name: exim
    git_core_path: /usr/libexec/git-core
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version > "6"

#- name: fix test-kitchen
#  command: "chmod -R ug+w /tmp/kitchen"
#  changed_when: False

- name: fix test-kitchen
  file:
    path: /tmp/kitchen
    state: directory
    recurse: true
    mode: 0775
    
- name: install repo for php7.1
  apt_repository:
    repo: 'ppa:ondrej/php'
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version > "15") or
        (ansible_distribution == "Debian" and ansible_distribution_major_version > "7")

- name: install packages (Debian)
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items: "{{ dependencies_ubuntu }}"
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version < "16") or
        (ansible_distribution == "Debian" and ansible_distribution_major_version < "8") 

- name: install packages Ubuntu16
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items: "{{ dependencies_ubuntu16 }}"
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version > "15") or
        (ansible_distribution == "Debian" and ansible_distribution_major_version > "7") 

- name: install packages (RHEL)
  yum:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items: "{{ dependencies_rhel }}"
  when: ansible_os_family == "RedHat"

- name: install tools for local mysql
  include: local.yml
  when: database_config.host == "127.0.0.1"

- name: create phabricator users
  user:
    name: "{{ item.value }}"
  with_dict: "{{ users }}"

- name: config sudoers file vcs
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^{{ users.vcs }}"
    line: "{{ users.vcs }} {{ permissions.vcs }}"
    validate: 'visudo -cf %s'

- name: configure sudoers file www
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^{{ users.web }}"
    line: "{{ users.web }} {{ permissions.web }}"
    validate: 'visudo -cf %s'

- name: dont require tty
  lineinfile:
    dest: /etc/sudoers
    state: absent
    line: "Defaults    requiretty"

- name: download phabricator from git repo
  git:
    repo: "{{ item.value }}"
    dest: "{{ web_root }}/{{ item.key }}"
    accept_hostkey: yes
  with_dict: "{{ repos }}"
    
- name: enable phabricator in nginx (Debian)
  template:
    src: phabricator.conf.j2
    dest: /etc/nginx/sites-available/phabricator.conf
    owner: root
    group: root
    mode: 0644
  when: ansible_os_family == "Debian" 
  notify: restart nginx

- file:
    src: /etc/nginx/sites-available/phabricator.conf
    dest: /etc/nginx/sites-enabled/phabricator.conf
    owner: root
    group: root
    state: link
  when: ansible_os_family == "Debian" 
  notify: restart nginx
  
- name: enable phabricator in nginx (Redhat)
  template:
    src: phabricator.conf.j2
    dest: /etc/nginx/conf.d/phabricator.conf
    owner: root
    group: root
    mode: 0644
  when: ansible_os_family == "RedHat" 
  notify: restart nginx
   
- name: enable php-fpm socket
  shell: |
    /bin/sed -i s'/listen = 127.0.0.1:9000/listen = \/var\/run\/php-main.socket/' /etc/php-fpm.d/www.conf ; /bin/sed -i s'/;listen.owner = nobody/listen.owner = nginx/' /etc/php-fpm.d/www.conf ; /bin/sed -i s'/;listen.group = nobody/listen.group = nginx/' /etc/php-fpm.d/www.conf ; /bin/sed -i s'/;listen.mode = 0660/listen.mode = 0660/' /etc/php-fpm.d/www.conf ;
  when: ansible_os_family == "RedHat" 
  #notify: restart php-fpm
  changed_when: False
  
- name: add php.ini config
  template:
    src: php.ini.j2
    dest: "{{ php_path }}/phabricator.ini"
    owner: root
    group: root
    mode: 0644
  notify: restart php-fpm

- name: Creates mysql_path
  file:
    path: "{{ mysql_path }}"
    state: directory
    owner: root
    group: root
    
- name: add mysql.cnf config
  template:
    src: mysql.cnf.j2
    dest: "{{ mysql_path }}/phabricator.cnf"
    owner: root
    group: root
    mode: 0644
  notify: restart mysql

- name: fix my.cnf
  lineinfile:
    path: /etc/my.cnf
    regexp: 'includedir /etc/my.cnf.d'
    insertafter: 'EOF'
    line: '!includedir /etc/my.cnf.d'
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version < "7"
  notify: restart mysql
    
- name: add git binaries to path
  file:
    src: "{{ git_core_path }}/git-http-backend"
    dest: /usr/bin/git-http-backend
    owner: root
    group: root
    state: link
  changed_when: False

- name: include config
  include: config.yml

- name: install pygments for better syntax highlighting
  pip:
    name: pygments

- name: Creates repo directory
  file:
    path: /var/repo
    state: directory
    owner: "{{ users.daemon }}"
    group: "{{ users.daemon }}"

#- name: start phabricator daemons
#  command: "{{ web_root }}/phabricator/bin/phd restart"
#  sudo_user: "{{ users.daemon }}"
#  changed_when: False

- name: create local file storage
  file:
    path: "{{ phabricator_local_disk_path }}" 
    state: directory
    owner: "{{ users.web }}"
    group: "{{ users.web }}"
  when: phabricator_file_storage == "local"

- name: add upstart template
  template:
    src: upstart.service.j2
    dest: /etc/init/phabricator-phd.conf
    owner: root
    group: root
    mode: 0644
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version < "15") or 
        (ansible_distribution == "Debian" and ansible_distribution_major_version < "8")
  notify: restart upstart phabricator-phd

- name: add upstart template Centos6
  template:
    src: upstart.service.centos6.j2
    dest: /etc/init/phabricator-phd.conf
    owner: root
    group: root
    mode: 0644
  when: (ansible_os_family == "RedHat" and ansible_distribution_major_version < "7")
  notify: restart upstart phabricator-phd
  
- name: add systemd template
  template:
    src: systemd.service.j2
    dest: /lib/systemd/system/phabricator-phd.service
    owner: root
    group: root
    mode: 0644
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version > "14") or
          (ansible_distribution == "Debian" and ansible_distribution_major_version > "7") or
          (ansible_os_family == "RedHat" and ansible_distribution_major_version > "6")
  notify: restart systemd phabricator-phd

- name: exim internet email
  lineinfile:
    path: "{{ exim_config_file }}"
    regexp: "^dc_eximconfig_configtype='local'"
    line: "dc_eximconfig_configtype='internet'"
    backrefs: yes
  when: ansible_os_family == "Debian"
  notify: restart exim

- name: apc config file stat
  lineinfile:
    path: "{{ php_path }}/apc.ini"
    regexp: "^apc.stat"
    line: "apc.stat=Off"
  when: (ansible_os_family == "RedHat" and ansible_distribution_major_version < "7")
  notify: restart php-fpm
  
- name: apc config file slam
  lineinfile:
    path: "{{ php_path }}/apc.ini"
    regexp: "^apc.slam_defense"
    line: "apc.slam_defense=Off"
  when: (ansible_os_family == "RedHat" and ansible_distribution_major_version  < "7")
  notify: restart php-fpm
 
- name: enable services on boot Centos7
  file:
    src: /usr/lib/systemd/system/{{ item }}
    dest: /etc/systemd/system/multi-user.target.wants/{{ item }}
    owner: root
    group: root
    state: link
  with_items:
     - nginx.service
     - php-fpm.service
     - phabricator-phd.service
     - mariadb.service
  when: (ansible_os_family == "RedHat" and ansible_distribution_major_version  > "6")
